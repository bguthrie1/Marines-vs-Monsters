actor DoomImpBall2 : MonsterWeapon
{
  obituary "%o was slashed by %k."
  States
  {
  Ready:
    PUNG A 1 A_WeaponReady
    loop
  Deselect:
    PUNG A 1 A_Lower
    loop
  Select:
    PUNG A 0 A_Raise // Additional A_Raises are needed for a quicker recovery from a pain state (matches that of normal monsters).
    PUNG A 0 A_Raise
    PUNG A 0 A_Raise
    PUNG A 0 A_Raise
    PUNG A 1 A_Raise
    loop
  Fire:
    PUNG B 8
    PUNG C 8 A_JumpIfCloser(75,"MeleeAttack")
    PUNG D 6 A_FireCustomMissile("DoomImpBall")
    PUNG C 6
    PUNG B 15 A_ReFire
    goto Ready
  MeleeAttack:
    PUNG D 0 A_PlaySound("imp/melee")
    PUNG D 8 A_CustomPunch(3)
    PUNG C 6
    PUNG B 15 A_ReFire
    goto Ready
  }
  Obituary "%o got burned by %k."
}



actor ImpPlayer : PlayerMonster
{
  Player.Startitem "DoomImpBall2"
  Player.Displayname "Imp"
  Player.Viewheight 48
  Player.SoundClass "imp2" // Custom sound classes used primarly for *usefail and *grunt.
  Obituary "%o was burned by %k."
  Health 60
  Radius 20
  Height 56
  Mass 100
  Speed 0.2
  Painchance 200
  DamageFactor "DoomImpFire", 0
  +FLOORCLIP
  states
  {
  Spawn:
	  TROO A 0 A_JumpIf (tid == 1, 2) // TID 1 is the Demon team, TID 2 is the Marine team. Used for MVM.
    TROO A 0 Thing_ChangeTID(0, 1)
    TROO A 0 A_JumpIfInventory ("NoTargetAlreadySet", 1, 5)
    TROO A 0 A_ChangeFlag ("SHOOTABLE", 0)  // It's used so that monsters who saw you instantly spawn wouldn't target you.
    TROO A 0 SetPlayerProperty (0, 1, PROP_NOTARGET) // Monsters ignore the player monster. The player can still provoke them though, naturally.
    TROO A 0 A_ChangeFlag ("SHOOTABLE", 1)
    TROO A 0 A_GiveInventory("NoTargetAlreadySet", 1)
    TROO A 0 A_GiveInventory ("DoomImpBall2") // Incase the map changed during the pain state, otherwise the weapon would be lost
    TROO A 0 A_SelectWeapon ("DoomImpBall2")
    TROO AB 10
    TROO A 0 A_JumpIfTargetInLOS(1, 90, JLOSF_DEADNOJUMP, 0, 0)
    Goto Spawn
    TROO A 0 A_CheckFlag("FRIENDLY", 1, AAPTR_PLAYER_GETTARGET) // Actors with the friendly flag in this case are actual enemies.
    Goto Spawn
    TROO A 0 A_Jump (30, "PlaySightRoar") // If the player is looking at an enemy, roar at the enemy, but not all the time.
    loop
  See:
	  TROO A 0 A_JumpIf (tid == 1, 2) // TID 1 is the Demon team, TID 2 is the Marine team. Used for MVM.
    TROO A 0 Thing_ChangeTID(0, 1)
    TROO AABBCCDD 3
    TROO D 0 A_Jump (20, "PlayActiveRoar")
    TROO D 0 A_JumpIfTargetInLOS(1, 90, JLOSF_DEADNOJUMP, 0, 0)
    Goto See
    TROO D 0 A_CheckFlag("FRIENDLY", 1, AAPTR_PLAYER_GETTARGET) // Jump if the target is has the friendly flag (an actual enemy in this case).
    Goto See
    TROO D 0 A_Jump (30, "PlaySightRoar") // If the player is chasing an enemy, roar at the enemy, but not all the time.
    loop
  Melee:
  Missile:
    TROO A 0 SetPlayerProperty (0, 1, PROP_FROZEN) // Stops movement of the monster when he fires. This is to mimic a normal monster attack.
    TROO A 0 A_ScaleVelocity (0) // Stops the monster completely when the monster fires.
    TROO EF 8
    TROO G 6
    TROO A 0 SetPlayerProperty (0, 0, PROP_FROZEN) // Monster can move again.
    goto Spawn
  Pain:
    TROO A 0 A_TakeInventory ("DoomImpBall2", 1) // Take away weapon to stop the monster from firing while stunned
    TROO A 0 SetPlayerProperty (0, 0, PROP_FROZEN) // To ensure that the player can move after shooting if he is in pain while shooting.
    TROO H 2
    TROO H 2 A_PlaySound("imp/pain")
    TROO A 0 A_GiveInventory ("DoomImpBall2", 1)
    TROO A 0 A_SelectWeapon ("DoomImpBall2")
    goto Spawn
  Death:
    TROO I 8
    TROO I 0 A_Playsound ("imp/death")
    TROO J 8
    TROO J 0
    TROO K 6
    TROO L 6 A_NoBlocking
    TROO M -1
    stop
  XDeath:
    TROO N 5
    TROO O 5 A_XScream
    TROO P 5
    TROO Q 5 A_NoBlocking
    TROO RST 5
    TROO U -1
    stop
  Raise:
    TROO ML 8
    TROO KJI 6
    goto Spawn

  PlayActiveRoar:
    TROO A 0 A_PlaySound("imp/active")
    Goto See

  PlaySightRoar:
    TROO A 0 A_PlaySound("imp/sight") // Rawr.
    Goto Spawn
  }
}
