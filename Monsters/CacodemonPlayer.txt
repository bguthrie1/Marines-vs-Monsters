Actor CacodemonBall2 : MonsterWeapon
{
  obituary "%o got too close to %k."
  States
  {
  Ready:
    TNT1 A 1 A_WeaponReady
    loop
  Deselect:
    TNT1 A 1 A_Lower
    loop
  Select:
    TNT1 A 0 A_Raise
    TNT1 A 0 A_Raise
    TNT1 A 0 A_Raise
    TNT1 A 0 A_Raise
    TNT1 A 1 A_Raise
    loop
   Fire:
    TNT1 A 5 A_JumpIfCloser(75,"MeleeAttack")
    TNT1 AA 5
    TNT1 A 5 A_FireCustomMissile("CacodemonBall")
    TNT1 A 0 A_ReFire
    goto Ready
  MeleeAttack:
    TNT1 A 24 A_CustomPunch(random(1,6)*10, 1) // Cacodemon's true melee damage.
    TNT1 A 0 A_ReFire
    goto Ready

  }
}

Actor CacodemonPlayer : PlayerMonster
{
  Player.Startitem "CacodemonBall2"
  Player.Displayname "Cacodemon"
  Player.Viewheight 50
  Player.SoundClass "caco2" // Custom sound classes used primarly for *usefail and *grunt.
  Player.DamageScreenColor Blue // Monster has blue blood
  Obituary "%o was smitten by %k."
  BloodColor Blue
  Health 400
  Radius 31
  Height 56
  Mass 400
  Speed 0.2
  Painchance 128
  DamageFactor "CacodemonFire", 0

  states
  {
  Spawn:
	  HEAD A 0 A_JumpIf (tid == 1, 2) // TID 1 is the Demon team, TID 2 is the Marine team. Used for MVM.
    HEAD A 0 Thing_ChangeTID(0, 1)
    HEAD A 0 A_JumpIfInventory ("NoTargetAlreadySet", 1, 5)
    HEAD A 0 A_ChangeFlag ("SHOOTABLE", 0)  // It's used so that monsters who saw you instantly spawn wouldn't target you.
    HEAD A 0 SetPlayerProperty (0, 1, PROP_NOTARGET) // Monsters ignore the player monster. The player can still provoke them though, naturally.
    HEAD A 0 A_ChangeFlag ("SHOOTABLE", 1)
    HEAD A 0 A_GiveInventory("NoTargetAlreadySet", 1)
    HEAD A 0 A_GiveInventory ("CacodemonBall2") // Incase the map changed during the pain state, otherwise the weapon would be lost
    HEAD A 0 A_SelectWeapon ("CacodemonBall2")
    HEAD A 0 SetPlayerProperty (0, 1, PROP_FLY) // Allows the monster to fly.
    HEAD A 10
    HEAD A 0 A_JumpIfTargetInLOS(1, 90, JLOSF_DEADNOJUMP, 0, 0)
    Goto Spawn
    HEAD A 0 A_CheckFlag("FRIENDLY", 1, AAPTR_PLAYER_GETTARGET) // Actors with the friendly flag in this case are actual enemies.
    Goto Spawn
    HEAD A 0 A_Jump (30, "PlaySightRoar") // If the player is looking at an enemy, roar at the enemy, but not all the time.
    loop
  See:
	  HEAD A 0 A_JumpIf (tid == 1, 2) // TID 1 is the Demon team, TID 2 is the Marine team. Used for MVM.
    HEAD A 0 Thing_ChangeTID(0, 1)
    HEAD A 3
    HEAD D 0 A_Jump (2, "PlayActiveRoar")
    HEAD D 0 A_JumpIfTargetInLOS(1, 90, JLOSF_DEADNOJUMP, 0, 0)
    Goto See
    HEAD D 0 A_CheckFlag("FRIENDLY", 1, AAPTR_PLAYER_GETTARGET) // Jump if the target is has the friendly flag (an actual enemy in this case).
    Goto See
    HEAD D 0 A_Jump (30, "PlaySightRoar") // If the player is chasing an enemy, roar at the enemy, but not all the time.
    loop
  Missile:
    HEAD A 0 SetPlayerProperty (0, 1, PROP_FROZEN) // Stops movement of the monster when he fires. This is to mimic a normal monster attack.
    HEAD A 0 A_ScaleVelocity (0) // Stops the monster completely when the monster fires.
    HEAD BC 5
    HEAD D 5 bright
    HEAD A 0 SetPlayerProperty (0, 0, PROP_FROZEN) // Monster can move again.
    goto Spawn
  Pain:
    HEAD A 0 A_TakeInventory ("CacodemonBall2", 1) // Take away weapon to stop the monster firing while stunned
    HEAD A 0 SetPlayerProperty (0, 0, PROP_FROZEN) // To ensure that the player can move after shooting if he is in pain while shooting.
    HEAD E 3
    HEAD E 3 A_PlaySound("caco/pain")
    HEAD F 6
    HEAD A 0 A_GiveInventory ("CacodemonBall2", 1)
    HEAD A 0 A_SelectWeapon ("CacodemonBall2")
    goto Spawn
  Death:
    HEAD G 8
    HEAD H 8 A_PlayerScream
    HEAD IJ 8
    HEAD K 8 A_NoBlocking
    HEAD L -1 A_SetFloorClip
    stop
  Raise:
    HEAD L 8 A_UnSetFloorClip
    HEAD KJIHG 8
    goto Spawn

  PlayActiveRoar:
    HEAD A 0 A_PlaySound("caco/active")
    Goto See

  PlaySightRoar:
    HEAD A 0 A_PlaySound("caco/sight") // Roars when player finds a target
    Goto Spawn

  }
}
